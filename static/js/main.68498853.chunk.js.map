{"version":3,"sources":["components/Navigator.js","components/Fullpage.js","sections/IntroductionSection.js","sections/AboutSection.js","components/SkillCard.js","sections/SkillSection.js","App.js","serviceWorker.js","index.js"],"names":["Navigator","react_default","a","createElement","className","href","data","sections","map","eachSection","concat","title","Component","Fullpage","children","this","props","id","IntroductionSection","src_components_Fullpage","subtitle","Object","keys","links","key","react_social_icons","url","AboutSection","items","p","content","SkillCard","skill","src","image","alt","SkillSection","eachSkill","src_components_SkillCard","App","lib_default","src_components_Navigator","src_sections_IntroductionSection","src_sections_AboutSection","src_sections_SkillSection","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68498853.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport data from \"../data.json\";\n\nimport \"./Navigator.css\";\n\nclass Navigator extends Component {\n  render() {\n    return (\n      <div className=\"nav\">\n        <ul>\n          <li>\n            <a href=\"#home\">Home</a>\n          </li>\n          {data.sections.map(eachSection => (\n            <li>\n              <a href={`#${eachSection.title}`}>{eachSection.title}</a>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Navigator;\n","import React, { Component } from \"react\";\n\nimport \"./Fullpage.css\";\n\nclass Fullpage extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <div id={this.props.id} className={`fullpage ${this.props.className || \"\"}`}>{children}</div>\n    );\n  }\n}\n\nexport default Fullpage;\n","import React, { Component } from \"react\";\nimport Fullpage from \"../components/Fullpage\";\nimport data from \"../data.json\";\nimport { SocialIcon } from \"react-social-icons\";\n\nimport \"./IntroductionSection.css\";\n\nclass IntroductionSection extends Component {\n  render() {\n    return (\n      <Fullpage id=\"home\" className=\"first\">\n        <h1 className=\"title\">{data.title}</h1>\n        <div>\n          <h2 className=\"subtitle\">{data.subtitle}</h2>\n        </div>\n        <div className=\"icons-wrapper\">\n          {Object.keys(data.links).map(key => {\n            return (\n              <div className=\"icon\">\n                <SocialIcon url={data.links[key]} />\n              </div>\n            );\n          })}\n        </div>\n      </Fullpage>\n    );\n  }\n}\n\nexport default IntroductionSection;\n","import React, { Component } from \"react\";\nimport data from \"../data.json\";\nimport Fullpage from \"../components/Fullpage.js\";\n\nimport \"./AboutSection.css\";\n\nclass AboutSection extends Component {\n  render() {\n    return (\n      <Fullpage id={data.sections[0].title} className=\"second\">\n        <h3>{data.sections[0].title}</h3>\n        <div className=\"paragraphs\">\n          {data.sections[0].items.map(p => {\n            return <p>{p.content}</p>;\n          })}\n        </div>\n      </Fullpage>\n    );\n  }\n}\n\nexport default AboutSection;\n","import React, { Component } from \"react\";\nimport \"./SkillCard.css\";\n\nclass SkillCard extends Component {\n  render() {\n    const { skill } = this.props;\n    return (\n      <div className=\"card\">\n        <div className=\"image-wrapper\">\n          <img src={skill.content.image} alt={skill.content.title} />\n        </div>\n        <div className=\"skill-title-wrapper\">\n          <h4>{skill.content.title}</h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SkillCard;\n","import React, { Component } from \"react\";\nimport Fullpage from \"../components/Fullpage\";\nimport data from \"../data.json\";\nimport SkillCard from \"../components/SkillCard\";\n\nimport \"./SkillSection.css\";\n\nclass SkillSection extends Component {\n  render() {\n    return (\n      <Fullpage id={data.sections[1].title} className=\"third\">\n        <h3>{data.sections[1].title}</h3>\n        <div className=\"cards-wrapper\">\n          {data.sections[1].items.map(eachSkill => (\n            <SkillCard skill={eachSkill} />\n          ))}\n        </div>\n      </Fullpage>\n    );\n  }\n}\n\nexport default SkillSection;\n","import React, { Component } from \"react\";\n\nimport Navigator from \"./components/Navigator\";\nimport IntroductionSection from \"./sections/IntroductionSection\";\nimport AboutSection from \"./sections/AboutSection\";\nimport SkillSection from \"./sections/SkillSection\";\nimport SnowStorm from \"react-snowstorm\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <SnowStorm />\n        <Navigator />\n        <IntroductionSection />\n        <AboutSection />\n        <SkillSection />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}